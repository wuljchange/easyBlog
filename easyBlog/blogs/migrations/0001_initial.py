# Generated by Django 2.1.1 on 2019-02-23 08:15

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title', max_length=128)),
                ('subtitle', models.CharField(blank=True, help_text='Subtitle', max_length=256)),
                ('label', models.CharField(blank=True, help_text='label', max_length=256)),
                ('date', models.DateField(auto_now_add=True)),
                ('text', ckeditor.fields.RichTextField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog', to=settings.AUTH_USER_MODEL)),
                ('blog_like_users', models.ManyToManyField(related_name='blog_like_users', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'blog',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='BlogComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('date', models.DateField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_author', to=settings.AUTH_USER_MODEL)),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_comment', to='blogs.Blog')),
                ('comment_like_users', models.ManyToManyField(related_name='comment_like_users', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'blog_comment',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(default='', max_length=128)),
                ('introduction', models.TextField(default='', max_length=1024)),
                ('header', models.ImageField(default='header/default.png', upload_to='header')),
                ('fan_users', models.ManyToManyField(related_name='fan_users', to=settings.AUTH_USER_MODEL)),
                ('follow_users', models.ManyToManyField(related_name='follow_users', to=settings.AUTH_USER_MODEL)),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
                ('profile_like_blogs', models.ManyToManyField(related_name='profile_like_blogs', to='blogs.Blog')),
            ],
            options={
                'db_table': 'user_detail_info',
            },
        ),
        migrations.CreateModel(
            name='ReplyComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('date', models.DateField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reply_comment_user', to=settings.AUTH_USER_MODEL)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_reply', to='blogs.BlogComment')),
                ('comment_reply_comments', models.ManyToManyField(related_name='_replycomment_comment_reply_comments_+', to='blogs.ReplyComment')),
                ('reply_comment_like_users', models.ManyToManyField(related_name='reply_comment_like_users', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'reply_comment',
            },
        ),
    ]
